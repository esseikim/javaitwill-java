package edu.java.method01;

public class MethodMain0101 {

	public static void main(String[] args) {
		/* 메서드 : 클래스 안에서 정의하는 기능 
		 * 함수, function)- 프로그램에서 사용될 기능을 코드 블록으로 작성한 것
		 *  메서드: 클래스 안에서 작성된 함수 
		 *  자바 언어는 메서드만 제공하고, 함수는 제공하지 않음! = 클래스 안에서만 메서드를 만들 수 있음
		 *  메서드 호출(call, invoke) : 메서드를 사용하기 위해서 메서드 이름을 사용하는 것
		 *  argument(인수) : 메서드를 호출할 때 메서드에게 전달하는 값 
		 *  parameter: 매개변수. 아규먼트를 저장하기 위한 메서드의 지역변수 
		 *  그 메서드 안에서도 변수가 있을 것. 전달받은 값을 가지고 뭔가를 할 것
		 *  반환 값(return value) : 메서드가 모든 기능을 수행한 후 메서드를 호출한 곳으로 되돌려 주는 값.
		 *  - 메서드는 반환값이 있을 수도, 없을 수도 있음.
		 *  반환 값이 없는 가장 대표적: println()
		 *  반환 값이 있는 메서드: nextInts()
		 *  스트링 배열을 저장할 수 있는 변수 args 선언!!!! 
		 *  메서드 정의(선언) 방법: [수식어] 리턴타입 메서드이름([파라미터 선언, ...]){...:코드작성}  
		 *  []생략 가능~ .
		 *  수식어: 부연설명하기 위한 것. 필수 아님~  - 리턴타입 바로 앞에 있는것. 
		 *  리턴타입, 메서드 이름, 괄호()는 반드시 써줘야 한다! 
		 *  메서드 바로 앞에 리턴 타입 반드시 써야!!!메서드의 리턴 값이 없는 경우에는 리턴타입을 void라고 선언함. 리턴이 없음을 알려주기 위한 예약어 void
		 *  메인은 아무것도 리턴하지 않는다. 반환값 없음. 쭈루루룩 실행만 함. 기능만 수행
		 *   패키지는 소문자로 씀. 
		 *   메서드 쏘면 최대 최대값 찾아줌~!
		 *   파라미터와 파라미터를 구분하는 것 : 쉼표
		 */
		System.out.println("테스트1"); // println: 우리 클래스에 정의된 메서드가 아님 -. . 길게 붙음 jdk 어딘가에 있을 것 println
		newLine();  	//  같은 클래스에 정의된/선언된 메서드를 호출할 때에는 이름만 써주면 됨
		System.out.println("테스트2");  // 노란색창! 넘겨받음 -> 파라미터. 반환타입이 int니 int를 넘겨라 그럼 변수 bound에 저장하겠다 
		newLine(4);
		System.out.println("테스트3");  



	}
	/**  <= 별표 두개! 문서화주석. 문서주석 document 
	 *  콘솔에 빈 줄 하나를 출력하는 메서드  
	 *  메서드 위에다가 써주면 자동문서가 만들어짐!!! 파라미터 리턴값에 대한 설명 적어줄 수 있음
	 */
	public static void newLine() { // 뉴라인을 호출하면 얘를 실행하겠다. 귀찮.. 호출할때마다 실행될것. // 메서드 {}밥 본체!!! 
		System.out.println();

	}

	/**
	 * 콘솔에 n개의 빈 줄을 출력하는 메서드.
	 * @param n : 0 이상의 정수. 출력할 빈 줄의 개수.
	 */
	public static void newLine(int n ) { // 파라미터임!!-  호출될때 값 전달하기 위한 변수 
		for (int i = 0; i < n ; i++) {
			System.out.println();
		}
	}
} 
